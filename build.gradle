buildscript {
    Properties localProperties = new Properties()
    if (rootProject.file('local.properties').canRead()) {
        localProperties.load(rootProject.file("local.properties").newDataInputStream())
    }

    ext {
        compose_version = localProperties['compose_version'] ?: '1.4.0'
        kotlin_version = localProperties['kotlin_version'] ?: '1.8.0'
        gradle_plugin_version = localProperties['gradle_plugin_version'] ?: '7.2.2'

        // Name that will be shown for debug build. By default it is from strings
        app_name = localProperties['app_name'] ?: "@string/app_name"
        // Whether the app is debuggable or not. Specify `false` if you want good performance in debug builds
        enable_debuggable = localProperties['debuggable'] ?: true
        // Ending part of package name.
        // Provide, for example, `application_id_suffix=.debug` in local.properties
        // to allow debug & release versions to coexist
        application_id_suffix = localProperties['application_id_suffix'] ?: ''

        // Compression level for debug AND release apk. 0 = disable compression. Max is 9
        compression_level = localProperties['compression_level'] ?: '0'

        // NOTE: If you need a different version of something, provide it in `local.properties`
        // like so: compose_version=123, or gradle_plugin_version=1.2.3, etc
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_plugin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.3.2"
        classpath 'com.android.tools.build:gradle:7.3.0'
        classpath 'com.google.gms:google-services:4.4.0'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.9'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version "$gradle_plugin_version" apply false
    id 'com.android.library' version "$gradle_plugin_version" apply false
    id 'org.jetbrains.kotlin.android' version "$kotlin_version" apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
